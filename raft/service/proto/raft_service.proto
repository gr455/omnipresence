syntax = "proto3";

package raft;

option go_package = "github.com/gr455/omnipresence/raft/service/genproto";

service Raft {
	rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse);
	rpc Vote (VoteRequest) returns (VoteResponse);
	rpc AppendEntries (AppendRequest) returns (AppendResponse);
	rpc AckAppend (AckAppendRequest) returns (AckAppendResponse);
}

message AppendRequest {
    string leader_id = 1;
    int64 term = 2;
    int64 prev_log_index = 3;
    int64 prev_log_term = 4;
    int64 leader_commit = 5;
    repeated LogEntry entries = 6;
}

message AppendResponse {}

message AckAppendRequest {
    string peer_id = 1;
    bool success = 2;
    int64 term = 3;
    int64 match_index = 4;
}

message AckAppendResponse {}

message RequestVoteRequest {
    string candidate_id = 1;
    int64 term = 2;
    int64 last_log_index = 3;
    int64 last_log_term = 4;
    int64 last_commit_index = 5;
}

message RequestVoteResponse {}

message VoteRequest {
	string peer_id = 1;
    bool vote_granted = 2;
    int64 term = 3;
}

message VoteResponse {}

message LogEntry {
	string entry = 1;
	int64 term = 2;
}
